;; Copyright 2023 John Hinchberger
;; 
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;; 
;;     http://www.apache.org/licenses/LICENSE-2.0
;; 
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.

(ns pile.test.macro
    (:refer pile.test pile.test.util))

        
(defmacro mplus [a b] '(+ ~a ~b))
(defmacro mplus-sym [a b] `(+ ~a ~b))

(test= "Quote Form" 
    '(+ 2 3) (macroexpand '(mplus 2 3)))
    
(test= "Syntax Quote Form" 
    '(pile.core/+ 2 3) (macroexpand `(mplus-sym 2 3)))

(defmacro plus [a b] '(+ ~a ~b))    
(defmacro unsplice-add [a] '(plus ~@a))    
(def comp-double-add (fn* [a] (unsplice-add [a a])))
    
(test= "Eval Plus"
    '(+ 2 3) (macroexpand '(unsplice-add [2 3])))
(test= "Compile Plus"
    6 (comp-double-add 3))    
    
(defmacro syn-plus [a b] `(+ ~a ~b))
(defmacro syn-unsplice-add [a] `(syn-plus ~@a))
(def syn-double-add (fn* [a] (syn-unsplice-add [a a])))

(test= "Eval Plus Syntax"
    '(pile.core/+ 2 3) (macroexpand '(syn-unsplice-add [2 3])))
(test= "Compile Plus Syntax"
    6 (syn-double-add 3))       
    
;;(defmacro scons [] `(fn* [^String s] (new String s)))
;;(def exp (scons))

;;(test= "Macro Types"
;;   "foobar" (exp "foobar"))
