;; Copyright 2023 John Hinchberger
;; 
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;; 
;;     http://www.apache.org/licenses/LICENSE-2.0
;; 
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.

(ns pile.test.data
    (:refer pile.test. pile.test.util pile.core.data))

(import (pile.util Triplet RootRec SimpleRec))

(test "record-map"
  (is (= {:one "two"} (record-map (new SimpleRec "two")))))
(test "record-map triplet"
 (is (= {:first "f" :level 12 :parts ["x" "y"]} (record-map (new Triplet "f" 12 ["x" "y"])))))
(test "to-record"
  (let [t (new Triplet "f" 12 ["x" "y"])
        root (new RootRec t "rest")
        root-map {:t {:first "f" :level 12 :parts ["x" "y"]} :other "rest"}]
     (is (= root-map (record-map root)))
     (is (= root (to-record root-map RootRec)))))



