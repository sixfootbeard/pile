;; Copyright 2023 John Hinchberger
;; 
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;; 
;;     http://www.apache.org/licenses/LICENSE-2.0
;; 
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.

(ns pile.test.math
    (:refer pile.test pile.test.util))

(defn eq-exact [l r]
   (and (= (class l) (class r))
        (= l r)))

(defmacro teq [l r]
   `(do 
       (is (eq-exact ~l ~r))
       (is ((fn [] (eq-exact ~l ~r))))))

;; 5.1.2 tests
;; byte
(teq 2 (+ (to-byte 1) (to-byte 1)))
(teq 2 (+ (to-byte 1) (to-short 1)))
(teq 2 (+ (to-byte 1) 1))
(teq 2.0f (+ (to-byte 1) 1f))
(teq 2.0 (+ (to-byte 1) 1.0))
(teq 2N (+' (to-byte 1) 1N))
(teq 2.0b (+' (to-byte 1) 1b))
;; short
(teq 2 (+ (to-short 1) (to-byte 1)))
(teq 2 (+ (to-short 1) (to-short 1)))
(teq 2 (+ (to-short 1) 1))
(teq 2.0f (+ (to-short 1) 1f))
(teq 2.0 (+ (to-short 1) 1.0))
(teq 2N (+' (to-short 1) 1N))
(teq 2.0b (+' (to-short 1) 1b))
;; int
(teq 2 (+ 1 (to-byte 1)))
(teq 2 (+ 1 (to-short 1)))
(teq 2 (+ 1 1))
(teq 2.0f (+ 1 1f))
(teq 2.0 (+ 1 1.0))
(teq 2N (+' 1 1N))
(teq 2.0b (+' 1 1b))
;; float
(teq 2f (+ 1f (to-byte 1)))
(teq 2f (+ 1f (to-short 1)))
(teq 2f (+ 1f 1))
(teq 2.0f (+ 1f 1f))
(teq 2.0d (+ 1f 1.0))
(teq 2.0b (+' 1f 1N))
(teq 2.0b (+' 1f 1b))



;; promotes to int
(is (eq-exact -1 (negate (to-byte 1))))
;; promotes to int
(is (eq-exact -1 (negate (to-short 1))))
(is (eq-exact -1 (negate 1)))
(is (eq-exact -1L (negate 1L)))
(is (eq-exact -1b (negate 1b)))
(is (eq-exact -1N (negate 1N)))